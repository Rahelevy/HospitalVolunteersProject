//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class HospitalVolunteersDBEntities3 : DbContext
    {
        public HospitalVolunteersDBEntities3()
            : base("name=HospitalVolunteersDBEntities3")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AssignedRequests> AssignedRequests { get; set; }
        public virtual DbSet<HelpRequest> HelpRequest { get; set; }
        public virtual DbSet<Requests> Requests { get; set; }
        public virtual DbSet<Service> Service { get; set; }
        public virtual DbSet<ServiceForVolunteer> ServiceForVolunteer { get; set; }
        public virtual DbSet<Volunteer> Volunteer { get; set; }
    
        public virtual ObjectResult<GetTopVolunteersByService_Result> GetTopVolunteersByService(Nullable<int> idService)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopVolunteersByService_Result>("GetTopVolunteersByService", idServiceParameter);
        }
    
        public virtual int GetServiceStatistics(Nullable<int> idService, ObjectParameter volunteerCount, ObjectParameter approvedRequestCount)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("IdService", idService) :
                new ObjectParameter("IdService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetServiceStatistics", idServiceParameter, volunteerCount, approvedRequestCount);
        }
    
        public virtual ObjectResult<GetVolunteerAssignmentsDetails_Result> GetVolunteerAssignmentsDetails(Nullable<int> idVolunteer)
        {
            var idVolunteerParameter = idVolunteer.HasValue ?
                new ObjectParameter("IdVolunteer", idVolunteer) :
                new ObjectParameter("IdVolunteer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVolunteerAssignmentsDetails_Result>("GetVolunteerAssignmentsDetails", idVolunteerParameter);
        }
    
        public virtual int GetVolunteerMonthlyHours(Nullable<int> idVolunteer, ObjectParameter currentMonthHours, ObjectParameter previousMonthHours)
        {
            var idVolunteerParameter = idVolunteer.HasValue ?
                new ObjectParameter("IdVolunteer", idVolunteer) :
                new ObjectParameter("IdVolunteer", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GetVolunteerMonthlyHours", idVolunteerParameter, currentMonthHours, previousMonthHours);
        }
    }
}
